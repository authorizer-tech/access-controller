{
  "swagger": "2.0",
  "info": {
    "title": "authorizer/accesscontroller/v1alpha1/expand_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ExpandService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alpha1ExpandResponse": {
      "type": "object",
      "properties": {
        "tree": {
          "$ref": "#/definitions/v1alpha1SubjectTree",
          "description": "The tree the requested SubjectSet expands to. The requested\nSubjectSet is the subject of the root.\n\nThis field can be nil in some circumstances."
        }
      },
      "description": "The response for an ExpandService.Expand rpc."
    },
    "v1alpha1NodeType": {
      "type": "string",
      "enum": [
        "NODE_TYPE_UNSPECIFIED",
        "NODE_TYPE_UNION",
        "NODE_TYPE_INTERSECTION",
        "NODE_TYPE_LEAF"
      ],
      "default": "NODE_TYPE_UNSPECIFIED",
      "description": "An enumeration defining types of nodes within a SubjectTree.\n\n - NODE_TYPE_UNION: A node type which expands to a union of all children.\n - NODE_TYPE_INTERSECTION: A node type which expands to an intersection of the children.\n - NODE_TYPE_LEAF: A node type which is a leaf and contains no children.\n\nIts Subject is a subject id string unless the maximum call depth was reached."
    },
    "v1alpha1Subject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A concrete subject id string for the subject."
        },
        "set": {
          "$ref": "#/definitions/v1alpha1SubjectSet",
          "description": "A SubjectSet that expands to more Subjects."
        }
      },
      "description": "Subject is either a concrete subject id string or\na SubjectSet expanding to more Subjects."
    },
    "v1alpha1SubjectSet": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The namespace of the object and relation referenced in this SubjectSet."
        },
        "object": {
          "type": "string",
          "description": "The object selected by the subjects."
        },
        "relation": {
          "type": "string",
          "description": "The relation between the object and the subject(s)."
        }
      },
      "description": "A SubjectSet refers to all subjects which have the same\nrelation to an object."
    },
    "v1alpha1SubjectTree": {
      "type": "object",
      "properties": {
        "nodeType": {
          "$ref": "#/definitions/v1alpha1NodeType",
          "description": "The type of the node."
        },
        "subject": {
          "$ref": "#/definitions/v1alpha1Subject",
          "description": "The subject this node represents."
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SubjectTree"
          },
          "description": "The children of this node.\n\nThis is unset if `node_type` is `NODE_TYPE_LEAF`."
        }
      }
    }
  }
}
