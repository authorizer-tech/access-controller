{
  "swagger": "2.0",
  "info": {
    "title": "authorizer/accesscontroller/v1alpha1/read_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ReadService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/authorizer/access-controller/v1alpha1/tuples": {
      "get": {
        "summary": "Lists relation tuples.",
        "description": "**NOTE**: This does not follow direct or indirect references through rewrites. If youq\nneed to follow indirect references through rewrites, please use the Expand API.",
        "operationId": "ReadService_ListRelationTuples",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRelationTuplesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query.namespace",
            "description": "Required. The namespace to query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.object",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.relations",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.subject.id",
            "description": "A concrete subject id string for the subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.subject.set.namespace",
            "description": "The namespace of the object and relation referenced in this SubjectSet.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.subject.set.object",
            "description": "The object selected by the subjects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.subject.set.relation",
            "description": "The relation between the object and the subject(s).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "snaptoken",
            "description": "Optional. The snapshot token that encodes the evaluation timestamp that this request will be evaluated no earlier than.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "Optional. The maximum number of RelationTuples to return in\nthe response.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Optional. A pagination token returned from a previous call to\n`ListRelationTuples` that indicates where the page should start\nat.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ReadService"
        ]
      }
    }
  },
  "definitions": {
    "ListRelationTuplesRequestQuery": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Required. The namespace to query."
        },
        "object": {
          "type": "string",
          "description": "Optional."
        },
        "relations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional."
        },
        "subject": {
          "$ref": "#/definitions/v1alpha1Subject",
          "description": "Optional."
        }
      },
      "description": "The query for listing relation tuples. Clients can\nspecify any optional field to partially filter for\nspecific relation tuples.\n\nExample use cases:\n - object only: display a list of all ACLs of one object\n - relation only: get all groups that have members; e.g. get all directories that have content\n - object \u0026 relation: display all subjects that have e.g. write relation\n - subject \u0026 relation: display all groups a subject belongs to/display all objects a subject has access to\n - object \u0026 relation \u0026 subject: check whether the relation tuple already exists, before writing it"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alpha1ListRelationTuplesResponse": {
      "type": "object",
      "properties": {
        "relationTuples": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RelationTuple"
          },
          "description": "The relation tuples matching the request query.\n\nThe RelationTuple list is ordered from the newest\nRelationTuple to the oldest."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token required to paginate to the next page."
        },
        "isLastPage": {
          "type": "boolean",
          "description": "Indicates if this is the last page of paginated data.\nIf `is_last_page` is true then using `next_page_token`\nin subsequent requests will return an error."
        }
      }
    },
    "v1alpha1RelationTuple": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The namespace this relation tuple lives in."
        },
        "object": {
          "type": "string",
          "description": "The object identifier related by this tuple.\n\nObjects live within the namespace of the tuple."
        },
        "relation": {
          "type": "string",
          "description": "The relation between the Object and the Subject."
        },
        "subject": {
          "$ref": "#/definitions/v1alpha1Subject",
          "description": "The subject related by this tuple."
        }
      },
      "description": "RelationTuple relates an object with a subject.\n\nWhile a tuple reflects a relationship between object\nand subject, they do not completely define the effective ACLs."
    },
    "v1alpha1Subject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A concrete subject id string for the subject."
        },
        "set": {
          "$ref": "#/definitions/v1alpha1SubjectSet",
          "description": "A SubjectSet that expands to more Subjects."
        }
      },
      "description": "Subject is either a concrete subject id string or\na SubjectSet expanding to more Subjects."
    },
    "v1alpha1SubjectSet": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The namespace of the object and relation referenced in this SubjectSet."
        },
        "object": {
          "type": "string",
          "description": "The object selected by the subjects."
        },
        "relation": {
          "type": "string",
          "description": "The relation between the object and the subject(s)."
        }
      },
      "description": "A SubjectSet refers to all subjects which have the same\nrelation to an object."
    }
  }
}
