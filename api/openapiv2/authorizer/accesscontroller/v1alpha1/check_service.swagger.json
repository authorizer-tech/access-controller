{
  "swagger": "2.0",
  "info": {
    "title": "authorizer/accesscontroller/v1alpha1/check_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CheckService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/authorizer/access-controller/v1alpha1/check": {
      "get": {
        "summary": "Check performs an access-control check by looking up if a specific subject\nis related to an object.",
        "operationId": "CheckService_Check",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "The namespace to evaluate the check within.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "object",
            "description": "The object to check.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "relation",
            "description": "The relation between the object and the subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject.id",
            "description": "A concrete subject id string for the subject.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject.set.namespace",
            "description": "The namespace of the object and relation referenced in this SubjectSet.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject.set.object",
            "description": "The object selected by the subjects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject.set.relation",
            "description": "The relation between the object and the subject(s).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "snaptoken",
            "description": "Optional. The snapshot token that encodes the evaluation timestamp that this request will be evaluated no earlier than.\n\nIf no snapshot token is provided the check request is evaluated against the most recently replicated version of the relation\ntuple storage. Leaving an empty snapshot token will reflect the latest changes, but it may incur a read penalty because the\nreads have to be directed toward the leaseholder of the replica that serves the data.\n\nWe call requests without a snapshot token a content-change check, because such requests require a round-trip read but return\nthe most recent writes and are thus good candidates for checking real-time content changes before an object is persisted.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CheckService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alpha1CheckResponse": {
      "type": "object",
      "properties": {
        "allowed": {
          "type": "boolean",
          "description": "A boolean indicating if the specified subject is related to the requested object.\n\nIt is false by default if no ACL matches."
        },
        "snaptoken": {
          "type": "string",
          "description": "A snapshot token encoding the snapshot evaluation timestamp that the request was evaluated at."
        }
      },
      "description": "The response for a CheckService.Check rpc."
    },
    "v1alpha1Subject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A concrete subject id string for the subject."
        },
        "set": {
          "$ref": "#/definitions/v1alpha1SubjectSet",
          "description": "A SubjectSet that expands to more Subjects."
        }
      },
      "description": "Subject is either a concrete subject id string or\na SubjectSet expanding to more Subjects."
    },
    "v1alpha1SubjectSet": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The namespace of the object and relation referenced in this SubjectSet."
        },
        "object": {
          "type": "string",
          "description": "The object selected by the subjects."
        },
        "relation": {
          "type": "string",
          "description": "The relation between the object and the subject(s)."
        }
      },
      "description": "A SubjectSet refers to all subjects which have the same\nrelation to an object."
    }
  }
}
