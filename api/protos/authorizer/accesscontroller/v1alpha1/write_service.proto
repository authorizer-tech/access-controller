syntax = "proto3";

package authorizer.accesscontroller.v1alpha1;

import "authorizer/accesscontroller/v1alpha1/acl.proto";
import "google/api/annotations.proto";

option go_package = "github.com/authorizer-tech/access-controller/genprotos/authorizer/accesscontroller/v1alpha1;acl";

// A service that defines APIs to manage relation tuple ACLs.
service WriteService {

  // Mutates one or more relation tuples within a single transaction.
  rpc WriteRelationTuplesTxn(WriteRelationTuplesTxnRequest) returns (WriteRelationTuplesTxnResponse) {
    option (google.api.http) = {
      post: "/authorizer/access-controller/v1alpha1/write",
      body: "*"
    };
  }
}

// The request of a WriteService.WriteRelationTuplesTxn rpc.
message WriteRelationTuplesTxnRequest {

  // The write delta for the relation tuples operated in one single transaction.
  // Either all actions commit or no changes take effect on error.
  repeated RelationTupleDelta relation_tuple_deltas = 1;
}

// Write-delta for a WriteRelationTuplesTxnRequest.
message RelationTupleDelta {

  // An enumeration defining the actions or mutations that can be done on a RelationTuple.
  enum Action {
    // An unspecified action.
    //
    // The `WriteRelationTuplesTxn` rpc ignores RelationTupleDeltas with
    // an unspecified action.
    ACTION_UNSPECIFIED = 0;

    // Upserts a new RelationTuple.
    //
    // If the RelationTuple already exists no modification is done.
    ACTION_INSERT = 1;

    // Deletes the RelationTuple.
    //
    // If the RelationTuple does not exist it's a no-op.
    ACTION_DELETE = 4;
  }

  // The action to do on the RelationTuple.
  Action action = 1;

  // The target RelationTuple.
  RelationTuple relation_tuple = 2;
}

// The response of a WriteService.WriteRelationTuplesTxn rpc.
message WriteRelationTuplesTxnResponse {

  // The list of the new latest snapshot tokens of the affected RelationTuple,
  // with the same index as specified in the `relation_tuple_deltas` field of
  // the WriteRelationTuplesTxnRequest request.
  //
  // If the RelationTupleDelta_Action was DELETE
  // the snaptoken is empty at the same index.
  repeated string snaptokens = 1;
}